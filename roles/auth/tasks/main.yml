- name: Install Samba
  yum:
    name:
      - samba
      - samba-client
      - samba-common
      - samba-winbind
      - samba-winbind-clients
    state: present

- name: Ensure Winbind is started and enabled on boot
  service: name=winbind state=started enabled=yes

- name: Configure Samba as a domain member
  template: src=smb.conf.j2 dest=/etc/samba/smb.conf
            owner=root group=root mode=644
  notify: restart samba

- name: Ensure Samba is started and enabled on boot
  service: name=smb state=started enabled=yes

- name: Join AD with Samba to generate the keytab
  command: /usr/bin/net ads join -U "{{ adauth_username }}"%"{{ adauth_password }}" --no-dns-updates
  args:
    creates: /etc/krb5.keytab

#
## Pause for few seconds mainly for DC to be ready to accept kinit requrest.
#
- pause: seconds=15

- name: Install Kerberos and LDAP clients
  yum:
    name:
      - krb5-workstation
      - openldap-clients
    state: present

- name: Configure Kerberos integration with AD
  template: src=krb5.conf.j2 dest=/etc/krb5.conf
            owner=root group=root mode=644

- name: Get kerberos ticket with the sambe keytab
  command: kinit -k -t /etc/krb5.keytab {{ ansible_hostname | regex_replace('\.local','') | upper }}\$\@{{ adauth_realm }}
  args:
    creates: /tmp/krb5cc_0
  register: result
  retries: 10
  until: result.rc == 0
  delay: 5

#
## Do not try to enable mkhomedir by oddjobd. It won't work due to the limitation of autofs
## user home. Autofs was trying to create a directory that should be a key for the automount
## map. So, if user bob logs in for the first time, the NFS/PanFS client was trying to create 
## /home/bob. If you had tried to do a directory listing of /home/users/bob on this system
## before logging in with bob, it would have failed as it wouldn't be able to find the directory.
##
## Autofs will block it from even attempting to create a new directory in /home/users.
#
- name: Install SSSD and related
  yum:
    name:
      - sssd
      - authconfig
    state: present

- name: Check if authconfig did a previous run
  command: "/bin/egrep '^auth.*sufficient.*pam_sss.so' /etc/pam.d/system-auth"
  register: authconfig_run
  changed_when: false
  ignore_errors: true

- name: Configure server to use SSSD for authentication 
  command: /usr/sbin/authconfig --enablesssd --enablesssdauth --updateall --nostart
  #when: authconfig_run.stdout.find("pam_sss.so") == -1
  when: authconfig_run.rc != 0
  notify: restart authconfig dependent

- name: Configure SSSD to use AD for authentication
  template: src=sssd.conf.j2 dest=/etc/sssd/sssd.conf
            owner=root group=root mode=0600
  notify: restart sssd

- name: Ensure SSSD is started and enabled on boot
  service: name=sssd state=started enabled=yes
