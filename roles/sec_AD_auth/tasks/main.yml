- name: YUM installing Samba
  yum:
    name:
      - samba
      - samba-client
      - samba-common
      - samba-winbind
      - samba-winbind-clients
    state: present

- name: SYSTEMD enabling and starting winbind as a service
  systemd:
    name: winbind
    state: started
    enabled: yes

- name: SAMBA deploying smb.conf from a template
  template: src=smb.conf.j2 dest=/etc/samba/smb.conf
            owner=root group=root mode=644
  notify: restart samba

- name: SYSTEMD enabling and starting smb as a service
  systemd:
    name: smb
    state: started
    enabled: yes

- name: KRB5 join AD with Samba to generate the keytab
  command: /usr/bin/net ads join -U "{{ adauth_username }}"%"{{ adauth_password }}" --no-dns-updates
  args:
    creates: /etc/krb5.keytab

#
# Pause for few seconds mainly for DC to be ready to accept kinit requrest.
#
- pause: seconds=15

- name: YUM installing Kerberos and LDAP clients
  yum:
    name:
      - krb5-workstation
      - openldap-clients
    state: present

- name: KRB5 deploying krb5.conf from a template
  template: src=krb5.conf.j2 dest=/etc/krb5.conf
            owner=root group=root mode=644

- name: KRB5 getting a kerberos ticket with the samba keytab
  command: kinit -k -t /etc/krb5.keytab {{ ansible_hostname | regex_replace('\.local','') | upper }}\$\@{{ adauth_realm }}
  args:
    creates: /tmp/krb5cc_0
  register: result
  retries: 10
  until: result.rc == 0
  delay: 5

#
## Do not try to enable mkhomedir by oddjobd. It won't work due to the limitation of autofs
## user home. Autofs was trying to create a directory that should be a key for the automount
## map. So, if user bob logs in for the first time, the NFS/PanFS client was trying to create 
## /home/bob. If you had tried to do a directory listing of /home/users/bob on this system
## before logging in with bob, it would have failed as it wouldn't be able to find the directory.
##
## Autofs will block it from even attempting to create a new directory in /home/users.
#
- name: YUM installing SSSD etc
  yum:
    name:
      - sssd
      - authconfig
    state: present

- name: authconfig checking if has been run previously
  command: "/bin/egrep '^auth.*sufficient.*pam_sss.so' /etc/pam.d/system-auth"
  register: authconfig_run
  changed_when: false
  ignore_errors: true

- name: authconfig configuring to use SSSD for login auth
  command: /usr/sbin/authconfig --enablesssd --enablesssdauth --updateall --nostart
  #when: authconfig_run.stdout.find("pam_sss.so") == -1
  when: authconfig_run.rc != 0
  notify: restart authconfig dependent

- name: SSSD configuring to use AD backend
  template: src=sssd.conf.j2 dest=/etc/sssd/sssd.conf
            owner=root group=root mode=0600
  notify: restart sssd

- name: SYSTEMD enabling and starting sssd as a service
  systemd:
    name: sssd
    state: started
    enabled: yes
